apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-combo-controller-manager
  namespace: '{{.Values.namespace}}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-combo-leader-election-role
  namespace: '{{.Values.namespace}}'
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-debugger-editor-role
rules:
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-debugger-viewer-role
rules:
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets/finalizers
  - deployments/finalizers
  - statefulsets/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets/scale
  - deployments/scale
  - statefulsets/scale
  verbs:
  - get
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets/status
  - deployments/status
  - statefulsets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers
  - ipsecconns
  - keepaliveds
  - pingers
  - vpngws
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers/finalizers
  - ipsecconns/finalizers
  - keepaliveds/finalizers
  - pingers/finalizers
  - vpngws/finalizers
  verbs:
  - update
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - debuggers/status
  - ipsecconns/status
  - keepaliveds/status
  - pingers/status
  - vpngws/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-pinger-editor-role
rules:
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - pingers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - pingers/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-pinger-viewer-role
rules:
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - pingers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - vpn-gw.kubecombo.com
  resources:
  - pingers/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-combo-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-combo-leader-election-rolebinding
  namespace: '{{.Values.namespace}}'
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-combo-leader-election-role
subjects:
- kind: ServiceAccount
  name: kube-combo-controller-manager
  namespace: '{{.Values.namespace}}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-combo-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-combo-manager-role
subjects:
- kind: ServiceAccount
  name: kube-combo-controller-manager
  namespace: '{{.Values.namespace}}'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-combo-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-combo-proxy-role
subjects:
- kind: ServiceAccount
  name: kube-combo-controller-manager
  namespace: '{{.Values.namespace}}'
---
apiVersion: v1
kind: Service
metadata:
  name: kube-combo-controller-manager-metrics-service
  namespace: '{{.Values.namespace}}'
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: kubecombo-controller-manager
