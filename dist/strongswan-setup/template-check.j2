#!/bin/bash
set -eux
{% for conn in connections %}
# ---loop check connection {{ conn.name }} remote public ip ---
while ! ping -n -c 1 {{ conn.remoteEIP }}; do
    echo "Waiting for remote eip {{ conn.remoteEIP }} to respond..."
    sleep 5
done

while ! ping -n -c 1 {{ conn.localVIP }}; do
    echo "Waiting for local vip {{ conn.localVIP }} to respond..."
    sleep 5
done

{% if conn.localGatewayNic is defined %}

# 1. make sure ipsec gateway nic is exist and disable rp_filter
echo "disable ipsec gateway nic {{ IPSEC_GATEWAY_NIC }} rp_filter"
ip a | grep -q {{ conn.localGatewayNic }}
sysctl -w "net.ipv4.conf.{{ conn.localGatewayNic }}.rp_filter=0"

# 2. make sure ipsec remote eip route is exist
ip route replace {{ conn.remoteEIP }} via {{ conn.localVipGateway }} dev {{ conn.localGatewayNic }}

# 3. make sure ipsec remote cidr route is exist
remoteTs={{ conn.remoteTs }}
remotes=($(echo $remotes | tr ',' ' '))
for remoteCidr in "${remotes[@]}"; do
    ip route replace "$remoteCidr" via {{ conn.localVipGateway }} dev {{ conn.localGatewayNic }}
done

# 4. make sure ipsec local cidr route is exist
localTs={{ conn.localTs }}
locals=($(echo $locals | tr ',' ' '))
for localCidr in "${locals[@]}"; do
    ip route replace "$localCidr" via {{ conn.localVipGateway }} dev {{ conn.localGatewayNic }}
done

{% endif %}

{% endfor %}

# loop check ss -tunlp | grep 4500
while ! ss -tunlp | grep 4500; do
    echo "Waiting for charon-systemd to start..."
    sleep 5
done

## debug
### swanctl --reload-settings
/usr/sbin/swanctl --load-all
swanctl --list-conns
# after ping remote private cidr ip
# this --list-sas will show the ESTABLISHED
/usr/sbin/swanctl --list-sas
/usr/sbin/swanctl --stats

ip xfrm state
ip xfrm policy

## debug
### if ip xfrm state |policy is empty, then run this command to debug
### swanctl --initiate --child net-net  mars-moon

# loop check and setup ipsec connection
# set up only when keepalived set the vip in local node
set +e
while true; do
{% for conn in connections %}
    if ip a | grep {{ conn.localVIP }}; then
        echo "node has ipsec vip {{ conn.localVIP }}, initiating..."
        /usr/sbin/swanctl --load-all
        {% for conn in connections %}
        /usr/sbin/swanctl --initiate --child net-net {{ conn.name }}
        {% endfor %}
        sleep 5
    else
        echo "node has no ipsec vip {{ conn.localVIP }}, sleeping and checking later......"
        sleep 5
    fi
{% endfor %}
done